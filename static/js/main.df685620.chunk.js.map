{"version":3,"sources":["components/svg.js","sports/Run.js","components/PieVis.js","components/LineVis.js","components/BarVis.js","sports/All.js","sports/Walk.js","sports/Cycle.js","sports/Other.js","App.js","serviceWorker.js","index.js"],"names":["sportIcon","item","type","xmlns","viewBox","d","Run","PieVis","data","useState","visData","setVisData","useEffect","length","items","forEach","element","newEl","label","name","angle","freq","color","fill","push","style","strokeWidth","width","height","colorType","colorDomain","colorRange","className","map","dat","index","key","cx","cy","r","LineVis","runActivities","walkActivities","cycleActivities","otherActivities","timestamp","Date","getTime","running","setRunning","walking","setWalking","cycling","setCycling","other","setOther","otheritems","cycleitems","runitems","walkitems","sort","a","b","ActivityDate","newEle","x","y","ElapsedTime","size","xDomain","xType","tickLabelAngle","tickPadding","title","strokeLinejoin","opacity","stroke","BarVis","all","setall","allMi","cycleMi","runMi","walkMi","Number","Distance","stackBy","cluster","All","allActivities","visualData","setVisualData","allData","runs","filter","act","ActivityType","includes","walks","rides","others","Walk","Cycle","Other","SteinStore","require","App","store","setActivities","runData","setRData","rideData","setRiData","walkData","setwData","otherData","setOData","read","limit","ofset","then","riding","activeTab","setTab","activeSport","setSport","aria-label","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df685620.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst sportIcon = ({ type }) => {\r\n  let item = null;\r\n  switch (type) {\r\n    case \"Run\":\r\n      item = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 416 512\">\r\n          <path d=\"M126.16 316.86l-19.85 46.28c-1.27 2.95-4.14 4.86-7.35 4.86H24.01C10.76 368 0 378.75 0 392s10.76 24 24.01 24h74.95c22.43 0 42.65-13.31 51.5-33.94l13.55-31.6-9.56-5.77c-11.88-7.18-21.22-16.87-28.29-27.83zM272.15 96c26.52 0 48.03-21.49 48.03-48s-21.5-48-48.03-48-48.03 21.49-48.03 48 21.51 48 48.03 48zm119.91 144.56l-48.4-.17c-3.53-.02-6.6-2.3-7.61-5.66l-13.95-45.92c-9.19-30.19-34.02-53.27-64.82-60.23l-78.25-17.7c-25.73-5.86-52.45.08-73.26 16.22L57.4 164.46c-10.49 8.09-12.43 23.17-4.31 33.66 8.08 10.5 23.23 12.41 33.68 4.31l48.39-37.36c9.46-7.33 21.68-9.92 33.3-7.38l14.88 3.37-35.3 87.35c-10.35 25.62-.69 54.59 22.98 68.91l83.78 50.58a8.004 8.004 0 0 1 3.55 9.05l-33.3 104.47c-3.64 12.75 3.74 26.03 16.49 29.67 2.2.62 4.42.92 6.61.92 10.44 0 20.06-6.86 23.08-17.41l33.3-104.47c6.93-24.25-3.31-50.28-24.9-63.33l-51.85-31.3 41.94-104.8c2.72 3.64 5.06 7.59 6.42 12.07l13.96 45.94c7.21 23.66 28.67 39.61 53.41 39.69l48.4.17h.08c13.23 0 23.97-10.69 24.01-23.92.05-13.26-10.66-24.04-23.94-24.09z\" />\r\n        </svg>\r\n      );\r\n      break;\r\n    case \"Walk\":\r\n      item = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n          <path d=\"M94.8 347.8s-.1-.1-.1-.2l-20.4 51c-2 5-5 9.6-8.9 13.4L7 470.5c-9.4 9.4-9.4 24.6 0 33.9 4.7 4.7 10.8 7 16.9 7s12.3-2.3 16.9-7l58.4-58.5c8.5-8.5 15-18.5 19.4-29.5l13.5-33.7-36.2-33.5-1.1-1.4zM207.8 96c26.5 0 47.9-21.5 47.9-48S234.2 0 207.8 0c-26.5 0-47.9 21.5-47.9 48s21.4 48 47.9 48zm104.7 174.9L283.2 242c-.9-.9-1.6-2-2-3.2L268.3 200c-14.4-43.1-54.4-72-99.8-72-34.8 0-53 8.8-95.7 26-20.9 8.4-37.9 24.1-48.2 44.8l-14.4 31.1c-13.3 28.7 30.1 49.1 43.5 20.2l14-30.4c4.8-9.6 12.9-17 22.8-21 21.7-8.7 33.1-13.5 44.3-17.1L115 260.8c-4.7 18.9.3 38.8 14.9 54.6l79 73c5.9 5.5 10 12.5 11.8 20.4l19.5 84.8c2.6 11.5 14.4 21.2 28.7 18 12.9-3 20.9-15.9 17.9-28.8l-19.5-84.7c-4-17.3-13-32.8-26-44.9l-53.8-49.6 26.2-104.8c7.4 9.7 7.5 12.6 21.8 55.4 2.8 8.3 7.5 15.9 13.8 22.2l29.3 29c22.3 21.5 56.7-11.9 33.9-34.5z\" />\r\n        </svg>\r\n      );\r\n      break;\r\n    case \"Other\":\r\n      item = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\r\n          <path d=\"M104 96H56c-13.3 0-24 10.7-24 24v104H8c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h24v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm528 128h-24V120c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v272c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h24c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM456 32h-48c-13.3 0-24 10.7-24 24v168H256V56c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v400c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h128v168c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24z\" />\r\n        </svg>\r\n      );\r\n      break;\r\n    case \"Cycle\":\r\n      item = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\r\n          <path d=\"M512.509 192.001c-16.373-.064-32.03 2.955-46.436 8.495l-77.68-125.153A24 24 0 0 0 368.001 64h-64c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h50.649l14.896 24H256.002v-16c0-8.837-7.163-16-16-16h-87.459c-13.441 0-24.777 10.999-24.536 24.437.232 13.044 10.876 23.563 23.995 23.563h48.726l-29.417 47.52c-13.433-4.83-27.904-7.483-42.992-7.52C58.094 191.83.412 249.012.002 319.236-.413 390.279 57.055 448 128.002 448c59.642 0 109.758-40.793 123.967-96h52.033a24 24 0 0 0 20.406-11.367L410.37 201.77l14.938 24.067c-25.455 23.448-41.385 57.081-41.307 94.437.145 68.833 57.899 127.051 126.729 127.719 70.606.685 128.181-55.803 129.255-125.996 1.086-70.941-56.526-129.72-127.476-129.996zM186.75 265.772c9.727 10.529 16.673 23.661 19.642 38.228h-43.306l23.664-38.228zM128.002 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c5.869 0 11.586.653 17.099 1.859l-45.505 73.509C89.715 331.327 101.213 352 120.002 352h81.3c-12.37 28.225-40.562 48-73.3 48zm162.63-96h-35.624c-3.96-31.756-19.556-59.894-42.383-80.026L237.371 184h127.547l-74.286 120zm217.057 95.886c-41.036-2.165-74.049-35.692-75.627-76.755-.812-21.121 6.633-40.518 19.335-55.263l44.433 71.586c4.66 7.508 14.524 9.816 22.032 5.156l13.594-8.437c7.508-4.66 9.817-14.524 5.156-22.032l-44.468-71.643a79.901 79.901 0 0 1 19.858-2.497c44.112 0 80 35.888 80 80-.001 45.54-38.252 82.316-84.313 79.885z\" />\r\n        </svg>\r\n      );\r\n      break;\r\n    case \"All\":\r\n      item = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n          <path d=\"M571 228.5c-78.1 88.2-179.8 108.8-184.1 109.6-134.8 26.1-153.3 7.5-237.1 37.5-10.6 3.8-21.8-3.6-21.8-14.8V112.5c0-9 7.3-16.4 16.3-16 43.2 2 95.3 13.2 155.2 42.4 140.6 68.5 223.7 62.9 252.9 57.2 18-3.8 31.3 18.1 18.6 32.4zM56 0C25.1 0 0 25.1 0 56c0 22.3 13.2 41.4 32 50.4V504c0 4.4 3.6 8 8 8h32c4.4 0 8-3.6 8-8V106.4c18.8-9 32-28.1 32-50.4 0-30.9-25.1-56-56-56z\" />\r\n        </svg>\r\n      );\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return item;\r\n};\r\n\r\nexport default sportIcon;\r\n","import React from 'react';\r\nimport './Sport.scss';\r\nconst Run =()=>{\r\n    return(<></>);\r\n}\r\nexport default Run;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { RadialChart } from \"react-vis\";\r\n\r\nconst PieVis = ({ data }) => {\r\n  const [visData, setVisData] = useState([]);\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      let items = [];\r\n      data.forEach(element => {\r\n        let newEl = {};\r\n        newEl.label = element.name;\r\n        newEl.angle = element.freq;\r\n        newEl.color = element.fill;\r\n        items.push(newEl);\r\n      });\r\n\r\n      setVisData(items);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      <RadialChart\r\n        style={{ strokeWidth: 0 }}\r\n        data={visData}\r\n        width={300}\r\n        height={300}\r\n        colorType={\"literal\"}\r\n        colorDomain={[0, 100]}\r\n        colorRange={[0, 10]}\r\n      />\r\n\r\n      <ul className=\"Sport__legend\">\r\n        {visData.map((dat, index) => {\r\n          return (\r\n            <li key={`item-${index}`}>\r\n              <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <circle cx=\"50\" cy=\"50\" r=\"50\" fill={dat.color}/>\r\n              </svg>\r\n              <p>{dat.label} ({dat.angle})</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default PieVis;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  LineSeries,\r\n  MarkSeries\r\n} from \"react-vis\";\r\nimport \"./Vis.scss\"\r\n\r\nconst LineVis = ({\r\n  runActivities,\r\n  walkActivities,\r\n  cycleActivities,\r\n  otherActivities\r\n}) => {\r\n\r\n  const timestamp = new Date(\"January 1 2019\").getTime();\r\n  const ONE_DAY = 86400000;\r\n\r\n  const [running, setRunning] = useState([]);\r\n  const [walking, setWalking] = useState([]);\r\n  const [cycling, setCycling] = useState([]);\r\n  const [other, setOther] = useState([]);\r\n  let otheritems = [];\r\n  let cycleitems = [];\r\n  let runitems = [];\r\n  let walkitems = [];\r\n\r\n  useEffect(() => {\r\n    runActivities.sort((a, b) => {\r\n      return new Date(a.ActivityDate) > new Date(b.ActivityDate) ? 1 : -1;\r\n    });\r\n    runActivities.forEach(element => {\r\n      let date = new Date(element.ActivityDate);\r\n      const newEle = {\r\n        x: date,\r\n        y: element.ElapsedTime / 60,\r\n        size: element.ElapsedTime / 60\r\n      };\r\n      runitems.push(newEle);\r\n    });\r\n    walkActivities.sort((a, b) => {\r\n      return new Date(a.ActivityDate) > new Date(b.ActivityDate) ? 1 : -1;\r\n    });\r\n    walkActivities.forEach(element => {\r\n      let date = new Date(element.ActivityDate);\r\n      const newEle = {\r\n        x: date,\r\n        y: element.ElapsedTime / 60,\r\n        size: element.ElapsedTime / 60\r\n      };\r\n      walkitems.push(newEle);\r\n    });\r\n    cycleActivities.sort((a, b) => {\r\n      return new Date(a.ActivityDate) > new Date(b.ActivityDate) ? 1 : -1;\r\n    });\r\n    cycleActivities.forEach(element => {\r\n      let date = new Date(element.ActivityDate);\r\n      const newEle = {\r\n        x: date,\r\n        y: element.ElapsedTime / 60,\r\n        size: element.ElapsedTime / 60\r\n      };\r\n      cycleitems.push(newEle);\r\n    });\r\n    otherActivities.sort((a, b) => {\r\n      return new Date(a.ActivityDate) > new Date(b.ActivityDate) ? 1 : -1;\r\n    });\r\n    otherActivities.forEach((element, index) => {\r\n      let date = new Date(element.ActivityDate);\r\n      const newEle = {\r\n        x: date,\r\n        y: element.ElapsedTime / 60,\r\n        size: element.ElapsedTime / 60\r\n      };\r\n      otheritems.push(newEle);\r\n    });\r\n    setOther(otheritems);\r\n    setCycling(cycleitems);\r\n    setWalking(walkitems);\r\n    setRunning(runitems);\r\n  }, [runActivities, walkActivities, cycleActivities, otherActivities]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot\r\n        width={1000}\r\n        height={400}\r\n        xDomain={[timestamp - 2 * ONE_DAY, timestamp + 216 * ONE_DAY]}\r\n        xType=\"time\"\r\n      \r\n      >\r\n        <HorizontalGridLines />\r\n        <VerticalGridLines />\r\n        <XAxis  tickLabelAngle={-90} tickPadding={3}/>\r\n        <YAxis title=\"Time Ellapsed in Minutes\" />\r\n        <MarkSeries\r\n          data={other}\r\n          style={{\r\n            strokeLinejoin: \"round\",\r\n            fill: \"#85144b\",\r\n            opacity: \".85\",\r\n            stroke: \"transparent\"\r\n          }}\r\n        />\r\n        <MarkSeries\r\n          data={cycling}\r\n          style={{\r\n            strokeLinejoin: \"round\",\r\n            fill: \"#001f3f\",\r\n            opacity: \".85\",\r\n            stroke: \"transparent\"\r\n          }}\r\n        />\r\n        <MarkSeries\r\n          data={running}\r\n          style={{\r\n            strokeLinejoin: \"round\",\r\n            fill: \"#ff4136\",\r\n            opacity: \".85\",\r\n            stroke: \"transparent\"\r\n          }}\r\n        />\r\n        <MarkSeries\r\n          data={walking}\r\n          style={{\r\n            strokeLinejoin: \"round\",\r\n            fill: \"#3d9970\",\r\n            opacity: \".85\",\r\n            stroke: \"transparent\"\r\n          }}\r\n        />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineVis;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries\r\n} from \"react-vis\";\r\n\r\nconst BarVis = ({\r\n  data,\r\n  runActivities,\r\n  walkActivities,\r\n  cycleActivities,\r\n  otherActivities\r\n}) => {\r\n  const [all, setall] = useState(0);\r\n  const [running, setRunning] = useState(0);\r\n  const [walking, setWalking] = useState(0);\r\n  const [cycling, setCycling] = useState(0);\r\n  let allMi = 0;\r\n  let cycleMi = 0;\r\n  let runMi = 0;\r\n  let walkMi = 0;\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      data.forEach(element => {\r\n        allMi += Number(element.Distance);\r\n      });\r\n\r\n      runActivities.forEach(element => {\r\n        runMi += Number(element.Distance);\r\n      });\r\n      walkActivities.forEach(element => {\r\n        walkMi += Number(element.Distance);\r\n      });\r\n      cycleActivities.forEach(element => {\r\n        cycleMi += Number(element.Distance);\r\n      });\r\n      setCycling(cycleMi);\r\n      setWalking(walkMi);\r\n      setRunning(runMi);\r\n      setall(allMi);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot width={300} height={300} stackBy=\"y\" xType=\"ordinal\">\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <VerticalBarSeries\r\n          cluster=\"Distance\"\r\n          color=\"#3d9970\"\r\n          data={[\r\n            { x: \"Run\", y: running },\r\n            { x: \"Walk\", y: walking },\r\n            { x: \"Cycle\", y: cycling }\r\n          ]}\r\n        />\r\n        <VerticalBarSeries\r\n          cluster=\"Distance\"\r\n          color=\"#001f3f\"\r\n          data={[\r\n            { x: \"Run\", y: all - running },\r\n            { x: \"Walk\", y: all - walking },\r\n            { x: \"Cycle\", y: all - cycling }\r\n          ]}\r\n        />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n};\r\nexport default BarVis;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PieVis from \"../components/PieVis\";\r\nimport LineVis from \"../components/LineVis\";\r\nimport BarVis from \"../components/BarVis\";\r\nimport \"./Sport.scss\";\r\n\r\nconst All = ({\r\n  allActivities,\r\n  runActivities,\r\n  walkActivities,\r\n  cycleActivities,\r\n  otherActivities\r\n}) => {\r\n  const [visualData, setVisualData] = useState([]);\r\n  useEffect(() => {\r\n    let allData = [];\r\n    if (allActivities.length > 0) {\r\n      const running = allActivities.filter(act => {\r\n        return act.ActivityType.includes(\"Run\");\r\n      });\r\n      let runs = {\r\n        name: \"Running\",\r\n        freq: running.length,\r\n        fill: \"#FF4136\"\r\n      };\r\n      allData.push(runs);\r\n      const walking = allActivities.filter(act => {\r\n        return act.ActivityType.includes(\"Walk\");\r\n      });\r\n      let walks = {\r\n        name: \"Walking\",\r\n        freq: walking.length,\r\n        fill: \"#3D9970\"\r\n      };\r\n      allData.push(walks);\r\n      const riding = allActivities.filter(act => {\r\n        return act.ActivityType.includes(\"Ride\");\r\n      });\r\n      let rides = {\r\n        name: \"Cycling\",\r\n        freq: riding.length,\r\n        fill: \"#001F3F\"\r\n      };\r\n      allData.push(rides);\r\n      const other = allActivities.filter(act => {\r\n        return (\r\n          !act.ActivityType.includes(\"Ride\") &&\r\n          !act.ActivityType.includes(\"Walk\") &&\r\n          !act.ActivityType.includes(\"Run\")\r\n        );\r\n      });\r\n      let others = {\r\n        name: \"Other Exercises\",\r\n        freq: other.length,\r\n        fill: \"#85144B\"\r\n      };\r\n      allData.push(others);\r\n\r\n      setVisualData(allData.sort((a, b) => (a.freq > b.freq ? 1 : -1)));\r\n    }\r\n  }, [allActivities]);\r\n\r\n  return (\r\n    <section className=\"Sport\">\r\n      <div className=\"Sport__sect1\">\r\n        <PieVis data={visualData} />\r\n      </div>\r\n      <div className=\"Sport__sect2\">\r\n        <LineVis\r\n          data={allActivities}\r\n          runActivities={runActivities}\r\n          walkActivities={walkActivities}\r\n          cycleActivities={cycleActivities}\r\n          otherActivities={otherActivities}\r\n        />\r\n      </div>\r\n      <div className=\"Sport__sect3\">\r\n        <BarVis\r\n          data={allActivities}\r\n          runActivities={runActivities}\r\n          walkActivities={walkActivities}\r\n          cycleActivities={cycleActivities}\r\n          otherActivities={otherActivities}\r\n        />\r\n      </div>\r\n      {/* <div className=\"Sport__sect4\"><PieVis  data={visualData}/></div> */}\r\n    </section>\r\n  );\r\n};\r\nexport default All;\r\n","import React from 'react';\r\nimport './Sport.scss';\r\nconst Walk =()=>{\r\n    return(<></>);\r\n}\r\nexport default Walk;","import React from 'react';\r\n\r\nimport './Sport.scss';\r\n\r\nconst Cycle =()=>{\r\n    return(<></>);\r\n}\r\nexport default Cycle;","import React from 'react';\r\nimport './Sport.scss';\r\nconst Other =()=>{\r\n    return(<></>);\r\n}\r\nexport default Other;","import React, {useEffect, useState} from 'react';\n\nimport SportIcon from './components/svg';\nimport {Run, All, Walk, Cycle, Other} from './sports/index';\n\nimport './App.scss';\n\nconst SteinStore = require(\"stein-js-client\");\n\nfunction App() {\n  const apiURL = \"https://api.steinhq.com/v1/storages/5d6d3d441ec06404b5572fa9\";\n  const store = new SteinStore(apiURL);\n \n  const [allActivities, setActivities] = useState([]);\n  const [runData, setRData] = useState([]);\n  const [rideData, setRiData] = useState([]);\n  const [walkData, setwData] = useState([]);\n  const [otherData, setOData] = useState([]);\n  const fetchData = () =>{\n    store.read(\"Activities\", {limit:243, ofset:1}).then(data => {\n     \n      setActivities(data)\n      const running = data.filter((act)=>{\n        return act.ActivityType.includes(\"Run\");\n      })\n      const walking = data.filter((act)=>{\n        return act.ActivityType.includes(\"Walk\");\n      })\n      const riding = data.filter((act)=>{\n        return act.ActivityType.includes(\"Ride\");\n      })\n      const other = data.filter((act)=>{\n        return !act.ActivityType.includes(\"Ride\") && !act.ActivityType.includes(\"Walk\") && !act.ActivityType.includes(\"Run\");\n      })\n      setRData(running)\n      setRiData(riding)\n      setwData(walking)\n      setOData(other)\n   \n      })\n  \n  }\n\n  useEffect(()=>{\n    if (allActivities.length === 0) fetchData();\n  })\n\n  const [activeTab, setTab] = useState(\"ALL\");\n  const [activeSport, setSport] = useState(null);\n  useEffect(()=>{\n   \n    \n    switch(activeTab){\n      case \"ALL\":\n          setSport( <All \n            allActivities={allActivities} \n            runActivities={runData} \n            walkActivities={walkData}\n            cycleActivities={rideData} \n            otherActivities={otherData}\n            />)\n      break;\n      case \"RUN\":\n          setSport( <Run runActivities={runData} />)\n      break;\n      case \"WALK\":\n      setSport( <Walk walkActivities={walkData} />)\n      break;\n      case \"CYCLE\":\n      setSport( <Cycle cycleActivities={rideData} />)\n      break;\n      case \"OTHER\":\n      setSport( <Other otherActivities={otherData} />)\n      break;\n      default:\n        break;\n    }\n\n  },[activeTab, allActivities, runData, walkData, rideData, otherData])\n\n\n  return (\n    <div className=\"App\">\n      <section className=\"App__tabs\">\n        <button aria-label=\"Look at All Data\" onClick={()=>{setTab(\"ALL\")}}><SportIcon type=\"All\" /></button>\n        {/* <button aria-label=\"Look at Running Data\" onClick={()=>{setTab(\"RUN\")}}><SportIcon type=\"Run\" /></button>\n        <button aria-label=\"Look at Walking Data\" onClick={()=>{setTab(\"WALK\")}}><SportIcon type=\"Walk\" /></button>\n        <button aria-label=\"Look at Cycling Data\" onClick={()=>{setTab(\"CYCLE\")}}><SportIcon type=\"Cycle\" /></button>\n        <button aria-label=\"Look at Other Sports Data\" onClick={()=>{setTab(\"OTHER\")}}><SportIcon type=\"Other\" /></button> */}\n\n      </section>\n      <section className=\"App__sport\">\n        {activeSport}\n      </section>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}